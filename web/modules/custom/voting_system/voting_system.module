<?php

/**
 * @file
 */

declare(strict_types=1);

/**
 * @file
 * Provides a question entity type.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Session\AccountInterface;
use Drupal\voting_system\QuestionInterface;

/**
 * Implements hook_theme().
 */
function voting_system_theme(): array {
  return [
    'voting_system_question' => ['render element' => 'elements'],
    'voting_system_answer' => [
      'template' => 'voting-system-answer',
      'variables' => [
        'answers' => [],
      ],
    ],
  ];
}

/**
 * Prepares variables for question templates.
 *
 * Default template: voting-system-question.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the question information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_voting_system_question(array &$variables): void {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_entity_access().
 */
function voting_system_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
  if ($entity instanceof QuestionInterface && $operation === 'delete') {
    return AccessResult::forbidden();
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function voting_system_form_voting_system_question_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // $form['title']['#disabled'] = TRUE;
  // $form['answers_display']['#disabled'] = TRUE;
}

/**
 * Implements hook_entity_preload().
 */
function voting_system_entity_preload(array $ids, $entity_type_id) {

}
